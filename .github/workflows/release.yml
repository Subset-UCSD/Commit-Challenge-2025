name: release

on:
    schedule:
        - cron: '0 8 * * *'
    workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs: 
    release:
        runs-on: ubuntu-latest
        steps:
            - name: checks you out 
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            
            - name: constructor
              id: changelog
              run: |
                ls -a
                export TZ="America/Los_Angeles"
                git log --since="24 hours ago" --pretty=format:"- %s" -p > commits.txt
                
                FILE_SIZE=$(wc -c < commits.txt)
                echo "leg: $FILE_SIZE"
                
                if [ ! -s commits.txt ]; then
                  echo "erm nobody committed"
                  exit 1
                fi

                jq -n --rawfile text gpt_prompt.txt --rawfile commits commits.txt \
                  '{"contents": [{"parts": [{"text": "\($text)\n\($commits)"}]}]}' > gemini_prompt.json
              shell: bash
            
            - name: geminis you
              env: 
                GEMINI_API_KEY: ${{ secrets.GEMINI_API }}
              run: |
                RESPONSE=$(curl -s "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${{ secrets.GEMINI_API }}" \
                -H 'Content-Type: application/json' \
                -X POST \
                -d @gemini_prompt.json)

                RELEASE_NOTES=$(echo $RESPONSE | jq -r '.candidates[0].content.parts[0].text')

                echo "$RELEASE_NOTES" > response.md
                sed -i '1d;$d' response.md
                cat response.md > changelog.md
              shell: bash

            - name: tag you're it
              run: |
                echo "TAG_NAME=nightly-$(date +'%Y-%m-%d')" >> $GITHUB_ENV
                git tag $TAG_NAME
                git push origin $TAG_NAME
              shell: bash
            
            - name: drops your hand while dancing
              uses: softprops/action-gh-release@v2
              with:
                body_path: changelog.md
                tag_name: ${{ env.TAG_NAME }}
                generate_release_notes: true
    game:
      runs-on: ubuntu-latest
      # if: github.event_name == 'schedule'
      steps:
        - name: checks you out 
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Use Node.js 22
          uses: actions/setup-node@v4
          with:
            node-version: 22
        - name: run the actions game
          env: 
            GEMINI_API: ${{ secrets.GEMINI_API }}
            DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          run: |
            git config user.name "Thomas A. Powell"
            git config user.email "tpowell@pint.com"
            npm install
            COMMITMSG=$(node --experimental-strip-types actions/act.mts)
            git add actions/state.yml
            git commit -m "$COMMITMSG"
            git push origin HEAD

    retry:
        if: failure() && fromJSON(github.run_attempt) < 3
        needs: [game]
        runs-on: ubuntu-latest
        steps:
            - env:
                  GH_REPO: ${{ github.repository }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: gh workflow run retry.yml -F run_id=${{ github.run_id }}
