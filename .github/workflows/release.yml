name: release

on:
    schedule:
        - cron: '0 7 * * *'
    workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs: 
    release:
        runs-on: ubuntu-latest
        steps:
            - name: checks you out 
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            
            - name: constructor
              id: changelog
              run: |
                ls -a
                export TZ="America/Los_Angeles"

                git log --since="24 hours ago" --pretty=format:"%H" | while read commit_hash; do
                  AUTHOR=$(git log -1 --pretty=format:"%an" "$commit_hash")

                  # Check if commit only modifies actions.md or if the author name includes "powell"
                  if [[ "$AUTHOR" == "Thomas A. Powell" ]]; then
                    echo "- $(git log -1 --pretty=format:"- %s" "$commit_hash" -p)" >> powell.txt
                  elif git diff-tree --no-commit-id --name-only -r "$commit_hash" | grep -q -v '^actions.md$'; then
                    echo "- $(git log -1 --pretty=format:"- %s" "$commit_hash" -p)" >> commits.txt
                  else 
                    echo "- $(git log -1 --pretty=format:"- %s" "$commit_hash" -p)" >> actions.txt
                  fi
                done
                
                if [ ! -s commits.txt ]; then
                  echo "no meaningful commits were made"
                  if [ -s e powell.txt]; then
                    echo "no meaningful commits were made, but we did run actions" >> changelog.md
                    jq -n --rawfile commits powell.txt \
                      '{"contents": [{"parts": [{"text": "Summarize what went on in the actions game today. You must format your response as a markdown file: \n\($commits)"}]}]}' > gemini_prompt.json
                  else 
                    exit 1
                  fi
                else 
                  jq -n --rawfile text gpt_prompt.txt --rawfile commits commits.txt \
                  '{"contents": [{"parts": [{"text": "\($text)\n\($commits)"}]}]}' > gemini_prompt.json
                fi
              shell: bash
            
            - name: geminis you
              env: 
                GEMINI_API_KEY: ${{ secrets.GEMINI_API }}
              run: |
                RESPONSE=$(curl -s "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${{ secrets.GEMINI_API }}" \
                -H 'Content-Type: application/json' \
                -X POST \
                -d @gemini_prompt.json)

                RELEASE_NOTES=$(echo $RESPONSE | jq -r '.candidates[0].content.parts[0].text')

                echo "$RELEASE_NOTES" > response.md
                sed -i '1d;$d' response.md
                cat response.md >> changelog.md
              shell: bash

            - name: tag you're it
              run: |
                echo "TAG_NAME=nightly-$(date +'%Y-%m-%d')" >> $GITHUB_ENV
                git tag $TAG_NAME
                git push origin $TAG_NAME
              shell: bash
            
            - name: drops your hand while dancing
              uses: softprops/action-gh-release@v2
              with:
                body_path: changelog.md
                tag_name: ${{ env.TAG_NAME }}
                generate_release_notes: true
    game:
      runs-on: ubuntu-latest
      # if: github.event_name == 'schedule'
      steps:
        - name: checks you out 
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
        - name: Use Node.js 22
          uses: actions/setup-node@v4
          with:
            node-version: 22
        - name: were any commits made today
          id: check_commits
          run: |
            COMMITS=$(git log --since="24 hours ago" --pretty=format:'%ae' | grep -v "tpowell@pint.com")
            if [ -z "$COMMITS" ]; then
              echo "No commits in the last 24 hours (excluding powell)."
              echo "should_continue=false" >> "$GITHUB_OUTPUT"
            else
              echo "Recent commits found:"
              echo "$COMMITS"
              echo "should_continue=true" >> "$GITHUB_OUTPUT"
            fi
        - name: generate stats page
          if: steps.check_commits.outputs.should_continue == 'true'
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            node --experimental-strip-types remind/green.mts || true
            git add remind/green.svg stats.html || true
        - name: run the actions game
          if: steps.check_commits.outputs.should_continue == 'true'
          env: 
            GEMINI_API: ${{ secrets.GEMINI_API }}
            DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
          run: |
            git config user.name "Thomas A. Powell"
            git config user.email "tpowell@pint.com"
            npm install
            COMMITMSG=$(node --experimental-strip-types actions/act.mts)
            git add actions/state.yml
            git commit -m "$COMMITMSG"
            git push origin HEAD

    retry:
        if: failure() && fromJSON(github.run_attempt) < 3
        needs: [game]
        runs-on: ubuntu-latest
        steps:
            - env:
                  GH_REPO: ${{ github.repository }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: gh workflow run retry.yml -F run_id=${{ github.run_id }}
